name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.29.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: node
        IMAGE_TAG: 1
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Deploy to App Runner
      id: deploy-apprunner
      uses: awslabs/amazon-app-runner-deploy@main        
      with:
        service: AppRunnerECRAccessRole	
        image: ${{ steps.build-image.outputs.image }}  
        access-role-arn: ${{ secrets.ROLE_ARN }}
        region: ${{ secrets.AWS_REGION }}
        cpu : 1
        memory : 2
        port: 8080
        wait-for-service-stability: true
      
    - name: Deploy to AWS App Runner
      run: aws apprunner start-deployment --service-arn arn:aws:apprunner:ap-south-1:637423270289:service/AppRunnerECRAccessRole/18e05bb4f23c488d9ff21e6e696e1c90
 

    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name testing
    
    # - name: Deploy to EKS
    #   run: |
    #     kubectl apply -f deployment.yaml
    #     kubectl apply -f service.yaml
